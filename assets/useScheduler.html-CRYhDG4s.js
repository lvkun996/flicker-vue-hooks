import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as s,a as t}from"./app-7443epeG.js";const a={},o=t(`<p>重复执行的定时器， 会在组件的unMounted阶段销毁</p><h2 id="api" tabindex="-1"><a class="header-anchor" href="#api"><span>API</span></a></h2><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span>start<span class="token punctuation">,</span> pause<span class="token punctuation">,</span> resume<span class="token punctuation">,</span> stop<span class="token punctuation">,</span> onPlaying<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useScheduler</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">do</span> somethings<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>


<span class="token comment">// start() // 运行计时器</span>
<span class="token comment">// pause() // 暂停计时器</span>
<span class="token comment">// resume() // 恢复计时器</span>
<span class="token comment">// stop() // 停止计时器</span>
<span class="token comment">// onPlaying((timeStamp) =&gt; {</span>
<span class="token comment">//    console.log(timeStamp)</span>
<span class="token comment">// })  // 计时器运行</span>
<span class="token comment">//</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),c=[o];function p(i,l){return n(),s("div",null,c)}const d=e(a,[["render",p],["__file","useScheduler.html.vue"]]),m=JSON.parse('{"path":"/guide/Effect/useScheduler.html","title":"useScheduler","lang":"zh-CN","frontmatter":{"title":"useScheduler","description":"重复执行的定时器， 会在组件的unMounted阶段销毁 API 示例 ","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/flicker-vue-hooks/guide/Effect/useScheduler.html"}],["meta",{"property":"og:site_name","content":"flicker-vue-hooks"}],["meta",{"property":"og:title","content":"useScheduler"}],["meta",{"property":"og:description","content":"重复执行的定时器， 会在组件的unMounted阶段销毁 API 示例 "}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"useScheduler\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[{"level":2,"title":"API","slug":"api","link":"#api","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.27,"words":80},"filePathRelative":"guide/Effect/useScheduler.md","autoDesc":true}');export{d as comp,m as data};
